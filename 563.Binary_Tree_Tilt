// Address : https://leetcode.com/contest/leetcode-weekly-contest-29/problems/binary-tree-tilt/
// Author  : itachigorun
// Date    : 2017-04-23

C++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int findTilt(TreeNode* root) {
        ans = 0;
        dfs(root);
        return ans;
    }
    int dfs(TreeNode *u) {
        if (!u) return 0;
        int l = dfs(u->left);
        int r = dfs(u->right);
        ans += abs(l-r);
        return l+r +u->val;
    }
};

C:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
 int sum = 0;

     
 int find_null(struct TreeNode *L){
 
     if(L == NULL)
         return 0;
     int lf = find_null(L->left);
     int lr = find_null(L->right);   
     sum += abs(lf - lr);
     return L->val + lf + lr;

 }
 
int findTilt(struct TreeNode* root) {
    sum = 0;
    find_null(root);
    return sum;
}