// Address : https://leetcode.com/problems/reverse-integer/#/description
// Author  : itachigorun
// Date    : 2017-03-16

/**************************************
* Reverse digits of an integer.
*
* Example1: x = 123, return 321
* Example2: x = -123, return -321
*
* click to show spoilers.
*
* Note:
* The input is assumed to be a 32-bit signed integer.
* Your function should return 0 when the reversed integer overflows.
*
****************************************/

class Solution {
public:
    int reverse(int x) {
         
       bool isNegative = false;
       if(x < 0)
       {
             isNegative = true;
             x = -x;
       }
         
       long new_num = 0;
       while(x > 0)
       {
          new_num = new_num*10 + (x % 10);
          x = x/10;
       }
 
       if(new_num > INT_MAX || new_num < INT_MIN)
       { 
           return 0; 
       }
       // 2^31 == 2147483648
       // 2^32 == 4294967296
       
       return (isNegative == true)? -new_num: new_num;
    }
};


/************************************
* less time use simple C++ solution which checks overflow
************************************/

class Solution {
public:
    int reverse(int x) {
        int ans = 0;
        while (x) {
            int temp = ans * 10 + x % 10;
            if (temp / 10 != ans)
                return 0;
            ans = temp;
            x /= 10;
        }
        return ans;
    }
};
